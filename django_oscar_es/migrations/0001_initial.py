# Generated by Django 4.2.13 on 2024-06-08 08:42

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("catalogue", "0027_attributeoption_code_attributeoptiongroup_code_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="ProductElasticsearchSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductFacet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("field", models.CharField(choices=[("", "")], max_length=255)),
                (
                    "label",
                    models.CharField(
                        blank=True,
                        help_text="The label is typically shown above all available choices for this facet. By default is uses the field name.",
                        max_length=255,
                    ),
                ),
                (
                    "facet_type",
                    models.CharField(
                        choices=[("term", "Term"), ("range", "Range")],
                        default="term",
                        max_length=20,
                    ),
                ),
                (
                    "size",
                    models.IntegerField(
                        default=10, help_text="The number of facet values to return."
                    ),
                ),
                (
                    "formatter",
                    models.CharField(
                        blank=True,
                        choices=[("", "")],
                        help_text="If you select a formatter, the values returned from Elasticsearch will be formatted using this function.",
                        max_length=255,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductSearchField",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("field", models.CharField(choices=[("", "")], max_length=255)),
                (
                    "boost",
                    models.FloatField(
                        default=1.0, help_text="The boost factor for this field."
                    ),
                ),
                (
                    "disabled",
                    models.BooleanField(
                        default=False,
                        help_text="If checked, this field will not be used for searching.",
                    ),
                ),
                (
                    "settings",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="search_fields",
                        to="django_oscar_es.productelasticsearchsettings",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductFacetRangeOption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "label",
                    models.CharField(
                        help_text="The label for this range option. Eg; '10 to 50'",
                        max_length=255,
                    ),
                ),
                (
                    "range_type",
                    models.CharField(
                        choices=[
                            ("integer", "Integer"),
                            ("float", "Float"),
                            ("double", "Double"),
                            ("decimal", "Decimal"),
                            ("date", "Date"),
                        ],
                        default="integer",
                        help_text="The type of range this option represents.",
                        max_length=20,
                    ),
                ),
                (
                    "from_value",
                    models.CharField(
                        blank=True,
                        help_text="The 'from' value for this range option.",
                        max_length=255,
                    ),
                ),
                (
                    "to_value",
                    models.CharField(
                        blank=True,
                        help_text="The 'to' value for this range option.",
                        max_length=255,
                    ),
                ),
                (
                    "facet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="range_options",
                        to="django_oscar_es.productfacet",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductFacetEnabledCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="catalogue.category",
                    ),
                ),
                (
                    "product_facet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="django_oscar_es.productfacet",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="ProductFacetDisabledCategory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="catalogue.category",
                    ),
                ),
                (
                    "product_facet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="django_oscar_es.productfacet",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="productfacet",
            name="disabled_categories",
            field=models.ManyToManyField(
                blank=True,
                help_text="If this facet should be hidden for a specific set of categories, you can choose them here. If you leave this (and enabled categories) empty, the facet will be enabled for all categories.",
                related_name="disabled_facets",
                through="django_oscar_es.ProductFacetDisabledCategory",
                to="catalogue.category",
            ),
        ),
        migrations.AddField(
            model_name="productfacet",
            name="enabled_categories",
            field=models.ManyToManyField(
                blank=True,
                help_text="If this facet is for a specific set of categories, you can choose them here. If you leave this (and disabled categories) empty, the facet will be enabled for all categories.",
                related_name="enabled_facets",
                through="django_oscar_es.ProductFacetEnabledCategory",
                to="catalogue.category",
            ),
        ),
        migrations.AddField(
            model_name="productfacet",
            name="settings",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="facets",
                to="django_oscar_es.productelasticsearchsettings",
            ),
        ),
        migrations.AddIndex(
            model_name="productfacetenabledcategory",
            index=models.Index(
                fields=["product_facet", "category"],
                name="django_osca_product_f6662d_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="productfacetenabledcategory",
            index=models.Index(
                fields=["category"], name="django_osca_categor_01a2a2_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="productfacetenabledcategory",
            unique_together={("product_facet", "category")},
        ),
        migrations.AddIndex(
            model_name="productfacetdisabledcategory",
            index=models.Index(
                fields=["product_facet", "category"],
                name="django_osca_product_881896_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="productfacetdisabledcategory",
            index=models.Index(
                fields=["category"], name="django_osca_categor_842de9_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="productfacetdisabledcategory",
            unique_together={("product_facet", "category")},
        ),
    ]
